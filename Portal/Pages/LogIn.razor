@inject IAuthenticationService AuthService
@inject NavigationManager NavManager

<EditForm Model="@model" OnValidSubmit="@ExecuteLogin" class="">

    <div class="form-row">
        <div class="col-auto">
             <label for="email" class="sr-only">Email</label>
            <InputText id="email" class="form-control" @bind-Value="model.Email" placeholder="Email Address"/>
        </div>
        <div class="col-auto">
             <label for="password" class="sr-only">Password</label>
            <InputText id="password" class="form-control" @bind-Value="model.Password" placeholder="Password"/>
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-success">Log In</button>
        </div>
    </div>
</EditForm>

@code {
    private AuthenticationUserModel model = new AuthenticationUserModel();
    private bool showAuthenticationError = false;
    private string authenticationErrorText = "";

    private async Task ExecuteLogin()
    {
        showAuthenticationError = false;

        AuthenticatedUserModel result = await AuthService.Login(model);

        if (result is not null)
        {
            NavManager.NavigateTo("/");
        }
        else
        {
            authenticationErrorText = "There was an error when trying to login";
            showAuthenticationError = true;
        }
    }
}



