@page "/register"
@inject IUserEndpoint userEndpoint
@inject IAuthenticationService AuthService
@inject NavigationManager NavManager


<h3>Create An Account</h3>

<EditForm Model="@model" OnValidSubmit="@OnValidSubmit" class="">
    <DataAnnotationsValidator />

    <div class="form-group row">
        <label for="first-name" class="col-md-2 col-form-label">First Name:</label>
        <div class="col-md-10">
            <InputText id="first-name" class="form-control" @bind-Value="model.FirstName" placeholder="First Name" />
            <ValidationMessage For="@(() => @model.FirstName)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="last-name" class="col-md-2 col-form-label">Last Name:</label>
        <div class="col-md-10">
            <InputText id="last-name" class="form-control" @bind-Value="model.LastName" placeholder="Last Name" />
            <ValidationMessage For="@(() => @model.LastName)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="email-address" class="col-md-2 col-form-label">Email Address:</label>
        <div class="col-md-10">
            <InputText type="email" id="email-address" class="form-control" @bind-Value="model.EmailAddress" placeholder="Email Address" />
            <ValidationMessage For="@(() => @model.EmailAddress)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="password" class="col-md-2 col-form-label">Password:</label>
        <div class="col-md-10">
            <InputText type="password" id="password" class="form-control" @bind-Value="model.Password" placeholder="Password" />
            <ValidationMessage For="@(() => @model.Password)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="confirm-password" class="col-md-2 col-form-label">ConfirmPassword:</label>
        <div class="col-md-10">
            <InputText type="password" id="confirm-password" class="form-control" @bind-Value="model.ConfirmPassword" placeholder="Confirm Password" />
            <ValidationMessage For="@(() => @model.ConfirmPassword)" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 text-right">
            <button type="submit" class="btn btn-success">Create Account</button>
        </div>
    </div>
</EditForm>

@code {
    CreateUserModel model = new();
    string errorMessage = "";


    private async Task OnValidSubmit()
    {
        errorMessage = "";
        AuthenticatedUserModel result = await AuthService.Login(new()
        {
            Email = model.EmailAddress,
            Password = model.Password
        });

        try
        {
            await userEndpoint.CreateUser(model);

            if (result is not null)
            {
                NavManager.NavigateTo("/");
            }
            else
            {
                errorMessage = "registration succesful but there was an error when trying to login";
            }
        }
        catch (Exception ex)
        {

            errorMessage = ex.Message;
        }

    }

}
